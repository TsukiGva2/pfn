# this code was auto generated by pfn

class UnmatchedError(Exception):
	pass

class ArgcountError(Exception):
	pass

def __pfn_call(p, args):
	result=None
	broke=False
	for f in p:
		try:
			result=f(*args)
		except (UnmatchedError, ArgcountError):
			continue
		broke=True

		break
	if not broke:
		raise Exception('no matching function')

	return result
import math 
def pfn_iSqrt(*args):
	if len(args) < 1:
		raise ArgcountError('too few arguments for function iSqrt')
	if 0 != args[0]:
		raise UnmatchedError('unmatched')
	return "undefined"

def pfn_iSqrt_1(*args):
	if len(args) < 1:
		raise ArgcountError('too few arguments for function iSqrt_1')
	if 1 != args[0]:
		raise UnmatchedError('unmatched')
	return 1

def pfn_iSqrt_2(*args):
	if len(args) < 1:
		raise ArgcountError('too few arguments for function iSqrt_2')
	x = args[0]
	if (x < 0):
		return "no real roots"
	
	return (1 / math.sqrt(x))

